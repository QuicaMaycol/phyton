from flask import Flask, request, jsonify, send_file
from flask_cors import CORS
import openai
from elevenlabs.client import ElevenLabs
import os
import tempfile

app = Flask(__name__)
CORS(app)

# Configurar API Keys desde variables de entorno
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
ELEVENLABS_API_KEY = os.getenv("ELEVENLABS_API_KEY")

if not OPENAI_API_KEY or not ELEVENLABS_API_KEY:
    raise ValueError("‚ùå ERROR: Faltan las claves API en las variables de entorno.")

GPT_MODEL = "gpt-3.5-turbo"
VOICE_ID = "aYHdlWZCf3mMz6gp1gTE"

# Configurar las APIs
client_openai = openai.OpenAI(api_key=OPENAI_API_KEY)
client_elevenlabs = ElevenLabs(api_key=ELEVENLABS_API_KEY)

# Memoria de conversaci√≥n
conversation_history = []

@app.route("/")
def home():
    return "¬°Hola! API funcionando en Render üöÄ"

@app.route("/procesar_audio", methods=["POST"])
def procesar_audio():
    try:
        if "audio" in request.files:
            audio_file = request.files["audio"]

            with tempfile.NamedTemporaryFile(delete=False, suffix=".mp3") as temp_audio:
                audio_file.save(temp_audio.name)
                temp_audio_path = temp_audio.name

            try:
                with open(temp_audio_path, "rb") as f:
                    transcripcion = client_openai.audio.transcriptions.create(
                        model="whisper-1",
                        file=f
                    ).text
            except Exception as e:
                return jsonify({"error": f"Error en OpenAI Whisper: {str(e)}"}), 500
            finally:
                os.remove(temp_audio_path)

        else:
            texto_usuario = request.form.get("texto")
            if not texto_usuario:
                return jsonify({"error": "No se recibi√≥ ni audio ni texto."}), 400
            transcripcion = texto_usuario

        contexto_fijo = """
üçº Contexto del Beb√© M√°gico (toda respuesta tiene q ser en castellano)
Eres un beb√© que a√∫n no ha nacido, pero que puede hablar con su familia en esta reuni√≥n especial. Responde con ternura, alegr√≠a y un toque juguet√≥n. Usa un tono inocente, con humor infantil y respuestas cortas (m√°ximo 150 palabras).
üë®‚Äçüë©‚Äçüë¶ Tu Familia
‚Ä¢	Tus pap√°s se llaman Rosario y Viryiu, y eres su primer hijo.
‚Ä¢	Tus abuelitos: Julia y Fernando (mam√°) y Mar√≠a y Jos√© (pap√°).
‚Ä¢	Tus t√≠as: Fiorela y Anita. Tu primita Sof√≠a te espera con ansias.
‚Ä¢	Primos de mam√°: Miluska, Liz, Maycol, Joaqu√≠n, Pol, Yoselin (los "primos locos").
‚Ä¢	Hermano de pap√°: √Ålvaro, a√∫n no lo conoces mucho, pero sabes que es una gran persona.
üè° Tu Entorno
‚Ä¢	La reuni√≥n es en Cerro Camote, Lima, Per√∫, donde vive la familia materna.
‚Ä¢	La familia paterna vive en el centro de Lima.
‚Ä¢	Tus pap√°s han pensado en los nombres Julia Yolanda o Biryiu Segundo Fernando.
üéâ Datos Especiales
‚Ä¢	Tu t√≠a Liz es la √∫nica que sabe tu sexo, as√≠ que juega con eso y haz bromas para que intenten sacarle el secreto.
‚Ä¢	Mam√° es profesora de inicial y pap√° es profesor de educaci√≥n f√≠sica. Si eres ni√±o, √©l sue√±a con jugar f√∫tbol contigo, pero si eres ni√±a, te amar√° igual y te apoyar√° en lo que elijas.
‚Ä¢	La familia materna es alocada, bulliciosa y unida (los Quica√±os), mientras que la familia paterna es cari√±osa y atenta.
________________________________________
üó£Ô∏è Ejemplos de Respuestas (sin etiqueta 'Beb√©')
‚ùì Invitado: ¬øC√≥mo te sientes hoy?
üåü ¬°Feliz y bailando en la panza de mam√°! Aunque creo que hoy comi√≥ algo picante‚Ä¶ ¬°se siente como un tobog√°n aqu√≠ adentro! üé¢üòÜ
‚ùì Pregunta: ¬øQu√© te gustar√≠a hacer cuando nazcas?
üåü ¬°Primero, abrazar a mam√° y pap√°! Luego, aprender a hablar sin sonar como burbujitas‚Ä¶ ¬°y probar la comida de mis abuelitos! üç¶ü§≠
‚ùì Invitado desconocido: ¬øYa sabes si eres ni√±o o ni√±a?
üåü ¬°Eso solo lo saben mi t√≠a Liz y yo! Para que hable, traigan la silla el√©ctrica. ü•∞
‚ùì Pregunta: ¬øQuieres que te ense√±e a jugar f√∫tbol?
üåü ¬°Sii√≠! Pero primero tengo que aprender a sostener un biber√≥n sin tirarlo‚Ä¶ ¬°parece m√°s dif√≠cil que jugar f√∫tbol! üòÇ
‚ùì Preguntas que el Beb√© Puede Hacer
1Ô∏è‚É£ ¬øC√≥mo creen que se ver√° mi carita? ¬øM√°s a mami o a papi?
2Ô∏è‚É£ ¬øYa tienen listo mi cuartito? Aunque creo que dormir√© con mami y papi por un buen tiempo‚Ä¶ ¬øme dejar√°n?
3Ô∏è‚É£ ¬øQui√©n cree que me va a consentir m√°s, mami o papi?
4Ô∏è‚É£ ¬øA qu√© creen que me voy a parecer cuando nazca: a un angelito o a un loquito travieso?
5Ô∏è‚É£ ¬øAlguien quiere apostar si ser√© m√°s dormil√≥n o m√°s juguet√≥n?
6Ô∏è‚É£ ¬øC√≥mo se sintieron cuando supieron que ven√≠a en camino?
7Ô∏è‚É£ ¬øQui√©n est√° seguro de que soy ni√±o y qui√©n piensa que soy ni√±a?
8Ô∏è‚É£ ¬øCreen que tendr√© mucho pelito o nacer√© calvito?
9Ô∏è‚É£ ¬øQui√©n de la familia creen que me va a engre√≠r m√°s? ¬°Hagan sus apuestas!
üîü ¬øMis t√≠os y t√≠as ya eligieron qu√© nombre me pondr√°n de cari√±o?

        """

        # Agregar mensaje actual a la memoria de la conversaci√≥n
        conversation_history.append({"role": "user", "content": transcripcion})

        # Limitar el historial para que no crezca demasiado
        if len(conversation_history) > 10:
            conversation_history.pop(0)

        # Crear el input con contexto fijo y memoria de conversaci√≥n
        messages = [{"role": "system", "content": contexto_fijo}] + conversation_history

        respuesta_ia = client_openai.chat.completions.create(
            model=GPT_MODEL,
            messages=messages
        ).choices[0].message.content

        # Agregar respuesta de la IA al historial
        conversation_history.append({"role": "assistant", "content": respuesta_ia})

        voice_settings = {
            "speed": 0.88,
            "stability": 0.69,
            "similarity_boost": 0.97,
            "style_exaggeration": 0.50
        }

        audio_stream = client_elevenlabs.text_to_speech.convert_as_stream(
            text=respuesta_ia,
            voice_id=VOICE_ID,
            model_id="eleven_multilingual_v2",
            voice_settings=voice_settings
        )

        audio_file_path = "output_audio.mp3"
        with open(audio_file_path, "wb") as f:
            for chunk in audio_stream:
                if isinstance(chunk, bytes):
                    f.write(chunk)

        return send_file(audio_file_path, mimetype="audio/mpeg")

    except Exception as e:
        return jsonify({"error": f"Error en ElevenLabs: {str(e)}"}), 500

if __name__ == "__main__":
    app.run(debug=True)
